package ch.bfh.cas.mad.tasktimetrackerapp.activities

import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.AutoCompleteTextView
import android.widget.Button
import android.widget.EditText
import androidx.activity.ComponentActivity
import androidx.lifecycle.ViewModelProvider
import ch.bfh.cas.mad.tasktimetrackerapp.persistence.DataStore
import ch.bfh.cas.mad.tasktimetrackerapp.R
import ch.bfh.cas.mad.tasktimetrackerapp.persistence.TTTDatabaseProvider
import ch.bfh.cas.mad.tasktimetrackerapp.persistence.Task
import ch.bfh.cas.mad.tasktimetrackerapp.persistence.TaskRepository
import ch.bfh.cas.mad.tasktimetrackerapp.viewModel.AddTaskViewModel
import ch.bfh.cas.mad.tasktimetrackerapp.viewModel.AddTaskViewModelFactory
import com.google.android.material.floatingactionbutton.FloatingActionButton

class AddTaskActivity : ComponentActivity() {

    private lateinit var viewModel: AddTaskViewModel
    private lateinit var addTaskButton: Button
    private lateinit var projectName: AutoCompleteTextView
    private lateinit var backButton: FloatingActionButton

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_addtask)

        val viewModelProvider = ViewModelProvider(
            this,
            AddTaskViewModelFactory(TaskRepository(TTTDatabaseProvider.get(this).getTaskDao()))
        )

        viewModel = viewModelProvider[AddTaskViewModel::class.java]

        addTaskButton = findViewById(R.id.addTaskButton)
        backButton = findViewById(R.id.fabBack)

        // ToDo: change getting project Id
        projectName = findViewById(R.id.projectName)
        val projects = DataStore.projects.map {it.name }
        val adapter = ArrayAdapter(this, android.R.layout.simple_dropdown_item_1line, projects)
        projectName.setAdapter(adapter)

        addTaskButton.setOnClickListener {
            val taskName = findViewById<EditText>(R.id.taskName).text.toString()    // ToDo: check for empty string, then try to to have a default value from entity
            val task = Task(0, taskName, 5)   // id is autoGenerated
            viewModel.addTask(task)
            finish()
        }

        backButton.setOnClickListener {
            finish()
        }
    }
}